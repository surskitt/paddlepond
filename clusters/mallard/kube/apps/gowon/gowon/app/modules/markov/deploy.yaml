---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.27.3-standalone-strict/deployment-apps-v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: markov
  namespace: gowon
  labels:
    app: gowon
    app.kubernetes.io/name: markov
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: markov
  template:
    metadata:
      labels:
        app: gowon
        app.kubernetes.io/name: markov
    spec:
      # initContainers:
      #   - name: init-file-wait
      #     image: alpine:latest
      #     command:
      #       - "sh"
      #       - "-c"
      #       - "while [[ ! -f /data/owls.json && ! -f /data/shane.json && ! -f /data/edd.json && ! -f /data/seb.json ]]; do echo waiting for corpus files; sleep 1; done"
      #     volumeMounts:
      #       - name: data
      #         mountPath: /data
      containers:
        - name: markov
          image: ghcr.io/gowon-irc/gowon-markov:0.1.0-11
          env:
            - name: GOWON_BROKER_HOST
              value: mosquitto
            - name: GOWON_MARKOV_MODELS
              # value: "owls:owls.json,shane:shane.json,edd:edd.json,seb:seb.json"
              value: "owls:owls.json"
            - name: GOWON_MARKOV_DATA_DIR
              value: /data
            - name: GOWON_MARKOV_CACHE_TTL
              value: "300"
            - name: GOWON_MARKOV_MSG_CHANCE
              value: "0.05"
            - name: GOWON_MARKOV_LOG_LEVEL
              value: DEBUG
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 512Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: markov-data
